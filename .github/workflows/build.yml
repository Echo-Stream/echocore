name: Artifacts Upload

on:
  push:
    branches:
      - 'main'
      - 'v[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:

jobs:
  start-runner:
    name: Start self-hosted EC2 runner
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_RUNNER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_RUNNER_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_RUNNER_REGION }}
      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.AWS_RUNNER_GITHUB_TOKEN }}
          ec2-image-id: ${{ secrets.AWS_RUNNER_PYTHON_EC2_IMAGE_ID }}
          ec2-instance-type: ${{ secrets.AWS_RUNNER_EC2_INSTANCE_TYPE }}
          subnet-id: ${{ secrets.AWS_RUNNER_SUBNET_ID }}
          security-group-id: ${{ secrets.AWS_RUNNER_SECURITY_GROUP_ID }}
          iam-role-name: ${{ secrets.AWS_RUNNER_IAM_ROLE_NAME }}
          aws-resource-tags: >
            [
              {"Key": "Name", "Value": "github-python-runner"},
              {"Key": "GitHubRepository", "Value": "${{ github.repository }}"}
            ]
  build:
    needs: start-runner
    runs-on: ${{ needs.start-runner.outputs.label }}
    steps:
      - uses: actions/checkout@v3
      - name: Set env vars
        run: |
          echo "AWS_DEFAULT_REGION=us-east-1" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY_ID=${{ secrets.ARTIFACTS_PIPELINES_ACCESS_KEY  }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.ARTIFACTS_PIPELINES_SECRET_KEY }}" >> $GITHUB_ENV
          echo "ARTIFACTS_BUCKET=${{ secrets.ARTIFACTS_S3 }}" >> $GITHUB_ENV
          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            echo "VERSION=${{ secrets.ECHOSTREAM_VERSION }}-dev" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF}" =~ ^refs\/heads\/v([0-9])+\.([0-9])+ ]]; then
            TEMP=`echo "${GITHUB_REF##*/v}" | cut -d'.' -f1-2`
            echo "VERSION=$TEMP" >> $GITHUB_ENV
          else
            echo "REF: ${GITHUB_REF}"
            echo "Not a buildable branch. Exiting"
            exit 1
          fi
          echo "REF: ${GITHUB_REF}"
      - name: Upload
        run: |
          mkdir python
          pip3.9 install --no-cache-dir --disable-pip-version-check --no-deps -r requirements.txt -t python
          rm -rf python/multipart/tests python/sniffio/_tests
          zip -r echocore.zip python/
          pip3.9 install --disable-pip-version-check boto3
          python3.9 publish_layers.py
          aws s3 cp echocore.json s3://$ARTIFACTS_BUCKET/$VERSION/lambda/layer/ --sse
        if: ${{ success() }}
  stop-runner:
    name: Stop self-hosted EC2 runner
    needs:
      - start-runner
      - build
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_RUNNER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_RUNNER_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_RUNNER_REGION }}
      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.AWS_RUNNER_GITHUB_TOKEN }}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
